setwd("C:/Users/erict/Projects/Coursera/Econometrics")
setwd(./Week2)
setwd("C:/Users/erict/Projects/Coursera/Econometrics/Week2")
ls
data <- read.xlsx("TestExer2-GPA-round2.xls")
library("xlsx")
data <- read.xlsx("TestExer2-GPA-round2.xls")
data <- read.xlsx("TestExer2-GPA-round2.xls", 1)
View(data)
View(data)
# Package dependencies
library("xlsx")
# Read Data
data <- read.xlsx("TestExer2-GPA-round2.xls", 1)
# part a
# Regress FGPA on a constant and SATV
fit <- lm(SATV ~ FGPA, data=data)
plot(fit)
plot(data$FGPA, data$SATV)
plot(data$SATV, data$FGPA)
summary(fit)
# part a
# (i)
# Regress FGPA on a constant and SATV
fit <- lm(FGPA ~ SATV, data=data)
# Report Coefficient of SATV and its standard error and p-value
# Within 3 decimals
summary(fit)
summary(fit)$coef
summary(fit)$coef[, "Estimate"]
summary(fit)$coef[, "Estimate"][0]
summary(fit)$coef[, "Estimate"][1]
summary(fit)$coef[, "Estimate"][1][2]
summary(fit)$coef[, "Estimate"][1][1]
class(summary(fit)$coef[, "Estimate"][1])
print(summary(fit)$coef[, "Estimate"][1])
coef <- summary(fit)$coef
coef["SATV", c("Estimate", "t value")]
clear
# Package dependencies
library("xlsx")
# Read Data
data <- read.xlsx("TestExer2-GPA-round2.xls", 1)
# part a
# (i)
# Regress FGPA on a constant and SATV
fit <- lm(FGPA ~ SATV, data=data)
# Report Coefficient of SATV and its standard error and p-value
# Within 3 decimals
coef <- summary(fit)$coef
SATV <- coef["SATV", c("Estimate", "Std. Error")]
print("SATV Coefficient \n", SATV)
print(SATV)
print(paste("SATV Coefficient: \n", SATV))
print(paste("SATV Coefficient: /n", SATV))
print("SATV Coefficient:")
print(SATV)
class(SATV)
names(SATV)
print("SATV Coefficients:")
print(SATV)
# (ii)
# Determine a 95% confidence interval (with 3 decimals) for
# the effect on FGPA of an increase by 1 point in SATV
min95 <- SATV[1] - 2 * SATV[2]
max95 <- SATV[1] + 2 * SATV[2]
print("95% Confidence Interval of effect on FGPA by 1 point increase in SATV:")
print(paste(min95, max95, sep=","))
? round
print("SATV Coefficients:")
print(round(SATV, 3))
# (ii)
# Determine a 95% confidence interval (with 3 decimals) for
# the effect on FGPA of an increase by 1 point in SATV
min95 <- round(SATV[1] - 2 * SATV[2],3)
max95 <- round(SATV[1] + 2 * SATV[2],3)
print("95% Confidence Interval of effect on FGPA by 1 point increase in SATV:")
print(paste(round, max95, sep="-"))
print(paste(min95, max95, sep="-"))
# Sanity check
plot(data$SATV, data$FGPA)
abline(fit)
# Sanity check
plot(data$SATV, data$FGPA, main="FGPA vs SATV", xlab="SATV", ylab="FGPA")
abline(fit)
summary(fit)
SATV <- coef["SATV", c("Estimate", "Std. Error", "PR(>|t|)")]
coef["SATV", "PR"
]
SATV <- coef["SATV", c("Estimate", "Std. Error", 4)]
coef
coef$SATV
coef$Pr
class(coef)
coef[,4]
coef["SATV",4]
name(coef["SATV",4])
names(coef)
colnaes(coef)
colnames(coef)
SATV <- coef["SATV", colnames(coef["SATV"], [1, 2, 4])]
SATV <- coef["SATV", colnames(coef["SATV"], c(1, 2, 4))]
SATV <- coef["SATV", colnames(coef["SATV", c(1, 2, 4)])]
print("SATV Coefficients:")
print(round(SATV, 3))
SATV
coef["SATV"]
coef["SATV",]
coef["SATV", colnames(coef["SATV",])]
colnames(coef["SATV"])
colnames(coef["SATV",])
colnames(coef)
SATV <- coef["SATV", colnames(coef[, c(1, 2, 4)])]
SATV
# part b
# Regress FGPA on a constant, SATV, SATM, and FEM
fit_multi <- lm(FGPA ~ SATV + SATM + FEM)
# Report Coefficient of SATV and its standard error and p-value
# Within 3 decimals
coef_multi <- summary(fit_multi)$coef
coef_ans <- coef[c("SATV", "SATM", "FEM"), colnames(coef_multi[, c(1, 2, 4)])]
print("Coefficients:")
print(round(coef_ans, 3))
# part b
# Regress FGPA on a constant, SATV, SATM, and FEM
fit_multi <- lm(FGPA ~ SATV + SATM + FEM, data=data)
# Report Coefficient of SATV and its standard error and p-value
# Within 3 decimals
coef_multi <- summary(fit_multi)$coef
coef_ans <- coef[c("SATV", "SATM", "FEM"), colnames(coef_multi[, c(1, 2, 4)])]
print("Coefficients:")
print(round(coef_ans, 3))
# part b
# Regress FGPA on a constant, SATV, SATM, and FEM
fit_multi <- lm(FGPA ~ SATV + SATM + FEM, data=data)
# Report Coefficient of SATV and its standard error and p-value
# Within 3 decimals
coef_multi <- summary(fit_multi)$coef
coef_ans <- coef[c("SATV", "SATM", "FEM"), colnames(coef_multi[, c(1, 2, 4)])]
coef_ans <- coef_multi[c("SATV", "SATM", "FEM"), colnames(coef_multi[, c(1, 2, 4)])]
print("Coefficients:")
print(round(coef_ans, 3))
# Sanity check
plot(data$SATV, data$FGPA, main="FGPA vs SATV", xlab="SATV", ylab="FGPA")
abline(fit_multi)
summary(fit)
# Sanity check
plot(data$SATM, data$FGPA, main="FGPA vs SATV", xlab="SATV", ylab="FGPA")
abline(fit-multi)
abline(fit_multi)
# Sanity check
plot(data$FEM, data$FGPA, main="FGPA vs SATV", xlab="SATV", ylab="FGPA")
?corr
?? corr
? cor
?cov2cor
cov2cor(data)
cor(data$FGPA, method=c("SATV", "SATM", "FEM"))
data(mtcars)
head(mtcars)
print("Coefficients:")
print(round(coef_ans, 3))
coef_multi
round(coef_multi[,1] - 2 * coef_multi[,2], 3)
sum(round(coef_multi[,1] - 2 * coef_multi[,2], 3))
print(round(coef_ans, 3))
# (ii)
# Determine a 95% confidence interval (with 3 decimals) for
# the effect on FGPA of an increase by 1 point in SATV
min95 <- sum(round(coef_ans[1] - 2 * coef_ans[2],3))
max95 <- sum(round(coef_ans[1] + 2 * coef_ans[2],3))
print("95% Confidence Interval of effect on FGPA by 1 point increase in SATV:")
print(paste(min95, max95, sep="-"))
print(c(min95, max95))
print(c(min95, max95))
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
data
cor(data)
?cor
class(data)
as.numeric(data)
class(data$Observation[1])
class(data$Observation[2])
class(data$FGPA[1])
cor(data[,c(2,3,4,5)])
round(cor(data[,c(2,3,4,5)]),3)
# part c
# Correlation Matrix
print("Correlation Matrix")
corr <- round(cor(data[,c(2,3,4,5)]),3)
print(corr)
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
coef_ans
coef_multi
coef_multi[c("(Intercept)","SATV", "SATM", "FEM"), colnames(coef_multi[, c(1, 2, 4)])]
summary(fit_multi)
? lm
summary(fit)
15.75^2
.06309/.02766
summary(fit_multi)
summary(fit_multi)$r
? summary(fit_multi)
str(summary(fit_multi))
summary(fit_multi)$r.squared
numrows(data)
len(data)
length(data)
nrow(data)
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
summary(fit_multi)
0.507*0.507
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
summary(fit_multi)
summary(fit_multi)$coef
summary(fit_multi)$coef[2, 3]
0.5071057*0.5071057
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
summary(fit)
round(summary(fit)$coef,3)
print(ro_sq)
r0_sq
summary(fit_multi)
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
coef_ans
coef_ans[2]
coef_ans[2, 2]
source('C:/Users/erict/Projects/Coursera/Econometrics/Week2/Assignment2.R')
setwd("C:/Users/erict/Projects/Coursera/Econometrics/Week4")
ls
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library("xlsx")
data <- read.xlsx("TrainExer42.xls", 1)
summary(data)
View(data)
data <- read.xlsx("TrainExer42.xls", 1)
head(data)
colnames(data)
head(data)
fit <- lm(Sales_0_0~PRICE0, data=data)
fit <- lm(Sales0_0~PRICE0, data=data)
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='$/beta=0$')
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='beta=0')
plot(abline(fit))
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='beta=0')
abline(fit)
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='beta=0')
abline(fit)
kable(fit$coefficients)
knitr::opts_chunk$set(echo = TRUE)
library("xlsx")
library(knitr)
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='beta=0')
abline(fit)
kable(fit$coefficients)
fit$coefficients
fit
fit <- lm(SALES0_0~PRICE0, data=data)
summary(fit)
plot(data$PRICE0, data$SALES0_0, xlab='Price0', ylab='Sales0', main='beta=0')
abline(fit)
kable(summary(fit)$coef)
kable(summary(fit)$coef)
kable(summary(fit)$coef)
colnames(data)
knitr::opts_chunk$set(echo = TRUE)
library("xlx")
knitr::opts_chunk$set(echo = TRUE)
library("xlsx")
data <- read.xlsx("TrainExer44.xls", 1)
head(data)
Z  <- as.data.frame(data[, c('RI', 'RPT', 'RPN', 'RPU')])
head(Z)
Z  <- as.data.frame(data[, c('RI', 'RPT', 'RPN', 'RPU')])
z$constant <- rep(1, nrow(z))
z  <- as.data.frame(data[, c('RI', 'RPT', 'RPN', 'RPU')])
z$constant <- rep(1, nrow(z))
head(Z)
z  <- as.data.frame(data[, c('RI', 'RPT', 'RPN', 'RPU')])
z$constant <- rep(1, nrow(z))
head(z)
type(data)
class(data)
data.matrix(z)
data.matrix(z)''
data.matrix(z).T
install.packages("matlib")
